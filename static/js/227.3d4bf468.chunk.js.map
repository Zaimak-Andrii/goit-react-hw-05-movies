{"version":3,"file":"static/js/227.3d4bf468.chunk.js","mappings":"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","sources":["utils/numberWithCommas.js","components/Button/Button.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.props.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.page.jsx"],"sourcesContent":["export function numberWithCommas(x, separator = ',') {\n  x = x.toString();\n  var pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(x)) x = x.replace(pattern, `$1${separator}$2`);\n  return x;\n}\n","import { Button } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport ForwardRoundedIcon from '@mui/icons-material/ForwardRounded';\n\nexport const ButtonLink = ({ children, to, ...props }) => (\n  <Button component={NavLink} to={to} {...props}>\n    {children}\n  </Button>\n);\n\nexport const BackButtonLink = ({ children, to }) => (\n  <ButtonLink\n    to={to}\n    startIcon={<ForwardRoundedIcon sx={{ transform: 'rotate(180deg)' }} />}\n  >\n    {children}\n  </ButtonLink>\n);\n","import styled from '@emotion/styled';\nimport { ButtonLink } from 'components/Button/Button';\n\nexport const DetailsButtonLink = styled(ButtonLink)(({ theme }) => ({\n  '&.active': {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n","import PropTypes from 'prop-types';\n\nexport const MovieDetailsPropTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    budget: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n    original_title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    vote_count: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import { useCallback, useMemo } from 'react';\nimport { Box, Rating, Stack, Typography } from '@mui/material';\nimport { numberWithCommas } from 'utils';\nimport { DetailsButtonLink } from './MovieDetails.styled';\nimport { MovieDetailsPropTypes } from './MovieDetails.props';\nimport config from 'config';\n\nexport default function MovieDetails({ data }) {\n  const {\n    title,\n    tagline,\n    budget,\n    genres,\n    original_title,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n    vote_count,\n  } = data;\n  const rating = useMemo(\n    () => Number((vote_average * 0.5).toFixed(1)),\n    [vote_average]\n  );\n  const getGenres = useCallback(\n    () => genres.map(genre => genre.name).join(', '),\n    [genres]\n  );\n\n  return (\n    <Box display=\"flex\" my={3}>\n      <Box minWidth={250} borderRadius={2} overflow=\"hidden\">\n        <img\n          src={`${config.urls.theMovies.image.bigPoster}${poster_path}`}\n          width=\"250\"\n          alt={title}\n        />\n      </Box>\n      <Box ml={3} display=\"flex\" flexDirection=\"column\">\n        <Typography variant=\"h4\" component=\"h2\">\n          {original_title} ({release_date.slice(0, 4)})\n        </Typography>\n        <Typography variant=\"subtitle2\" component=\"h3\">\n          {tagline}\n        </Typography>\n        <Typography variant=\"subtitle1\" component=\"h3\" mt={1}>\n          Budget: ${numberWithCommas(budget)}\n        </Typography>\n        <Typography variant=\"subtitle1\" component=\"h3\">\n          Genres: {getGenres()}\n        </Typography>\n        <Typography mt={3}>{overview}</Typography>\n        <Box display=\"flex\" alignItems=\"center\" mt={3}>\n          <Typography component=\"span\" mr={1}>\n            Rating:\n          </Typography>\n          <Rating\n            name=\"half-rating-read\"\n            defaultValue={rating}\n            precision={0.1}\n            readOnly\n          />\n          <Typography component=\"span\" ml={1}>\n            ({numberWithCommas(vote_count)})\n          </Typography>\n        </Box>\n        <Stack direction=\"row\" spacing={2} mt=\"auto\">\n          <DetailsButtonLink to=\"cast\">Cast</DetailsButtonLink>\n          <DetailsButtonLink to=\"reviews\">Reviews</DetailsButtonLink>\n        </Stack>\n      </Box>\n    </Box>\n  );\n}\n\nMovieDetails.propTypes = MovieDetailsPropTypes;\n","import { Outlet, useLoaderData, useLocation } from 'react-router-dom';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { BackButtonLink } from 'components/Button';\n\nexport default function MovieDetailsPage() {\n  const data = useLoaderData();\n  const location = useLocation();\n  const backHref = location.state?.from || '/movies';\n\n  return (\n    <>\n      <BackButtonLink to={backHref}>Back</BackButtonLink>\n      <MovieDetails data={data} />\n      <Outlet />\n    </>\n  );\n}\n"],"names":["numberWithCommas","x","separator","toString","pattern","test","replace","ButtonLink","children","to","props","Button","component","NavLink","BackButtonLink","startIcon","ForwardRounded","sx","transform","DetailsButtonLink","styled","theme","color","palette","common","white","backgroundColor","primary","dark","PropTypes","title","tagline","budget","genres","id","name","isRequired","original_title","overview","poster_path","release_date","vote_average","vote_count","MovieDetails","data","rating","useMemo","Number","toFixed","getGenres","useCallback","map","genre","join","Box","display","my","minWidth","borderRadius","overflow","src","config","width","alt","ml","flexDirection","Typography","variant","slice","mt","alignItems","mr","Rating","defaultValue","precision","readOnly","Stack","direction","spacing","MovieDetailsPage","useLoaderData","backHref","useLocation","state","from"],"sourceRoot":""}